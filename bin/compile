#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

indent() {
  # if an arg is given it's a flag indicating we shouldn't indent the first
  # line, so use :+ to tell SED accordingly if that parameter is set, otherwise
  # null string for no range selector prefix (it selects from line 2 onwards and
  # then every 1st line, meaning all lines)
  c="${1:+"2,999"} s/^/       /"
  case $(uname) in
    Darwin) sed -l "$c";; # mac/bsd sed: -l buffers on line boundaries
    *)      sed -u "$c";; # unix/gnu sed: -u unbuffered (arbitrary) chunks of data
  esac
}

mkdir -p "$1" "$2" "$3"

BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)
ENV_DIR=$(cd "$3/" && pwd)
BUILDPACK_DIR=$(dirname $(dirname $0))

PATH="$BUILD_DIR/build/linux/amd64:$PATH:$BUILD_DIR/bin:$CACHE_DIR/bin"

mkdir -p "$BUILD_DIR/bin" "$CACHE_DIR/bin"

if ! command -v gimme ; then
  curl \
    -sSL \
    -o "$CACHE_DIR/bin/gimme" \
    https://raw.githubusercontent.com/travis-ci/gimme/master/gimme
  chmod +x "$CACHE_DIR/bin/gimme"
fi

if [[ -f "$ENV_DIR/GO_VERSION" ]] ; then
  GO_VERSION=$(cat $ENV_DIR/GO_VERSION)
fi

GO_IMPORT_PATH=main

if [[ -f "$ENV_DIR/GO_IMPORT_PATH" ]] ; then
  GO_IMPORT_PATH=$(cat $ENV_DIR/GO_IMPORT_PATH)
fi

eval "$(HOME=$BUILD_DIR gimme ${GO_VERSION:-1.5.1})" 2>&1 | indent
export GOROOT="$BUILD_DIR/.gimme/versions/go${GO_VERSION:-1.5.1}.linux.amd64"
export GOPATH="$BUILD_DIR/gopath"
export PATH="$GOROOT/bin:$BUILD_DIR/gopath/bin:$PATH"

cd "$BUILD_DIR"

mkdir -p "$BUILD_DIR/gopath/src/$(dirname $GO_IMPORT_PATH)"

if [[ ! -l "$BUILD_DIR/gopath/src/$GO_IMPORT_PATH" ]] ; then
  ln -sv "$BUILD_DIR" "$BUILD_DIR/gopath/src/$GO_IMPORT_PATH"
fi

if [[ ! -f $CACHE_DIR/.profile.d/homebin.sh ]] ; then
  echo 'PATH=$PATH:$HOME/gopath/bin:$HOME/build/linux/amd64:$HOME/bin' > \
    $CACHE_DIR/.profile.d/homebin.sh
fi

echo "-----> Syncing cache dir to build dir... "
rsync -az $CACHE_DIR/ $BUILD_DIR/ | indent

echo "-----> Making prereqs"
make prereqs 2>&1 | indent

echo "-----> Making deps"
make deps 2>&1 | indent

echo "-----> Making build"
make build 2>&1 | indent
